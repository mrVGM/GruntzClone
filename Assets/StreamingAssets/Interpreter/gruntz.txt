let playAbility = function() {
	let raycastInfo = require("./info.txt");

	let selection = raycastInfo();
	let actor = selection.actor;

	let abilitiesComponent = actor.GetComponent|"Gruntz.Abilities.AbilitiesComponent"|();
	let mainAbility = abilitiesComponent.GetMainAbility();
	abilitiesComponent.ActivateAbility(mainAbility, null);
};

let spawn = function(name) {
	let raycastInfo = require("./info.txt");
	let selection = raycastInfo();

	let game = Base.Game.Instance;
	let defRepo = game.DefRepositoryDef;

	let template = null;
	foreach (defRepo.AllDefs, function(def) {
		if (template != null) {
			return;
		}
		if (def.GetType().FullName == "Gruntz.Actors.ActorTemplateDef" && def.name == name) {
			template = def;
		}
	});

	let actor = Gruntz.Actors.ActorDeployment.DeployActorFromTemplate(template, selection.tile);
	return actor;
};

let switchState = function(index) {
	let raycastInfo = require("./info.txt");
	let selection = raycastInfo();
	let actor = selection.actor;
	if (actor == null) {
		return;
	}
	let switchStateComponent = actor.GetComponent|"Gruntz.SwitchState.SwitchStateComponent"|();

	let game = Base.Game.Instance;
	let defRepo = game.DefRepositoryDef;

	let statusDef = switchStateComponent.SwitchStateComponentDef.StateStatuses[index];
	print(statusDef);
	switchStateComponent.SetCurrentState(statusDef);
};

let giveWeapon = function(name) {
	let raycastInfo = require("./info.txt");
	let selection = raycastInfo();
	let actor = selection.actor;
	if (actor == null) {
		return;
	}

	let game = Base.Game.Instance;
	let defRepo = game.DefRepositoryDef;

	let item = null;
	foreach (defRepo.AllDefs, function(def) {
		if (item != null) {
			return;
		}
		if (def.GetType().FullName == "Gruntz.Items.ItemDef" && def.name == name) {
			item = def;
		}
	});
	let equipment = actor.GetComponent|"Gruntz.Equipment.EquipmentComponent"|();
	equipment.Weapon = item;
};

exports = {};
exports.playAbility = playAbility;
exports.spawn = spawn;
exports.switchState = switchState;
exports.giveWeapon = giveWeapon;
